{
    "bonds_active": {
        "exclude": [
            "order_id",
            "requiredbondamount",
            "bondamounttaken",
            "renewaldateofbond"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {
            "orderdate": {
                "mapping_table": "cases.orderdate",
                "direction": "ASC"
            }
        },
        "casrec": {
            "from_table": "order",
            "transform": {},
            "joins": [
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.order.\"Case\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_bonds_active exc_table ON exc_table.caserecnumber = pat.\"Case\"\n",
            "where_clauses": [
                "{casrec_schema}.order.\"Bond Rqd\" = 'Y'",
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "bonds",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.cases ON cases.id = bonds.order_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = cases.client_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_bonds_active exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.clientsource = '{client_source}'",
                "bonds.bondcompanyname != 'Security dispensed with'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "bonds_dispensed": {
        "exclude": [
            "order_id",
            "requiredbondamount",
            "bondamounttaken",
            "renewaldateofbond"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {
            "orderdate": {
                "mapping_table": "cases.orderdate",
                "direction": "ASC"
            }
        },
        "casrec": {
            "from_table": "order",
            "transform": {},
            "joins": [
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.order.\"Case\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_bonds_dispensed exc_table ON exc_table.caserecnumber = pat.\"Case\"\n",
            "where_clauses": [
                "{casrec_schema}.order.\"Bond Rqd\" = 'S'",
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "bonds",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.cases ON cases.id = bonds.order_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = cases.client_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_bonds_dispensed exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.clientsource = '{client_source}'",
                "bonds.bondcompanyname = 'Security dispensed with'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "cases": {
        "exclude": [
            "assignee_id",
            "caserecnumber",
            "client_id",
            "correspondent_id",
            "donor_id",
            "feepayer_id",
            "person_id",
            "uid"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {
            "orderdate": {
                "mapping_table": "cases.orderdate",
                "direction": "ASC"
            }
        },
        "casrec": {
            "from_table": "order",
            "transform": {
                "orderstatus": "CASE WHEN \"Ord Stat\" = 'Active' AND \"Ord Type\" IN ('26','43','45') THEN 'OPEN' ELSE UPPER(\"Ord Stat\") END",
                "howdeputyappointed": "CASE WHEN deputyships.\"Joint\" = '1' THEN 'SOLE' WHEN deputyships.\"Joint\" = '2' THEN 'JOINT' WHEN deputyships.\"Joint\" IN ('3', '4') THEN 'JOINTANDSEVERALLY' ELSE NULL END"
            },
            "joins": [
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.order.\"Case\"",
                "LEFT JOIN (SELECT \"Order No\", \"Joint\" FROM (SELECT \"Order No\", \"Joint\", row_number() OVER (PARTITION BY \"Order No\" ORDER BY \"Create\" DESC, \"at\" DESC) AS rownum FROM (SELECT \"Order No\", \"Joint\", \"Create\", \"at\" FROM {casrec_schema}.deputyship WHERE \"Joint\" != '5') AS non_five_deputyships) AS numbered_deputyships WHERE rownum = 1) AS deputyships ON {casrec_schema}.order.\"Order No\" = deputyships.\"Order No\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_cases exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "cases",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = cases.client_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_cases exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'",
                "cases.casetype = 'ORDER'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "client_addresses": {
        "exclude": [
            "person_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {
                "address_lines": "CONCAT(\"Adrs1\", ',', \"Adrs2\")"
            },
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_addresses exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "addresses",
            "transform": {
                "address_lines": "array_to_string(ARRAY(SELECT json_array_elements_text(addresses.address_lines)), ',')"
            },
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = addresses.person_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_addresses exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "client_death_notifications": {
        "exclude": [
            "person_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_death_notifications exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.pat.\"Term Type\" = 'D'"
            ]
        },
        "sirius": {
            "from_table": "death_notifications",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = death_notifications.person_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_death_notifications exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "client_nodebtchase_warnings": {
        "exclude": [],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_nodebtchase_warnings exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.pat.\"Debt chase\" = '1'"
            ]
        },
        "sirius": {
            "from_table": "person_warning",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = person_warning.person_id",
                "LEFT JOIN {target_schema}.warnings ON warnings.id = person_warning.warning_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_nodebtchase_warnings exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'",
                "warnings.warningtype = 'Other'",
                "warnings.warningtext = 'Casrec Migration - No Debt to be chased'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "client_persons": {
        "exclude": [
            "caserecnumber",
            "createddate",
            "dateofdeath",
            "middlenames",
            "uid",
            "feepayer_id",
            "clientstatus",
            "updateddate"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_persons exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "persons",
            "transform": {
                "updateddate": "cast({col} as date)"
            },
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_persons exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "client_phonenumbers": {
        "exclude": [
            "person_id",
            "updateddate"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_phonenumbers exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.pat.\"Client Phone\" != ''"
            ]
        },
        "sirius": {
            "from_table": "phonenumbers",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = phonenumbers.person_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_phonenumbers exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "client_saarcheck_warnings": {
        "exclude": [],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_saarcheck_warnings exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.pat.\"SAAR Check\" = 'Y'"
            ]
        },
        "sirius": {
            "from_table": "person_warning",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = person_warning.person_id",
                "LEFT JOIN {target_schema}.warnings ON warnings.id = person_warning.warning_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_saarcheck_warnings exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'",
                "warnings.warningtype = 'Other'",
                "warnings.warningtext = 'Casrec Migration - SAAR Check Warning'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "client_special_warnings": {
        "exclude": [],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_special_warnings exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.pat.\"SIM\" = '3'"
            ]
        },
        "sirius": {
            "from_table": "person_warning",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = person_warning.person_id",
                "LEFT JOIN {target_schema}.warnings ON warnings.id = person_warning.warning_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_special_warnings exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'",
                "warnings.warningtype = 'REM - Special Interest Markers'",
                "warnings.warningtext = 'Casrec Migration - Special Interest Warning'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "client_violent_warnings": {
        "exclude": [],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_violent_warnings exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.pat.\"VWM\" = '4'"
            ]
        },
        "sirius": {
            "from_table": "person_warning",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = person_warning.person_id",
                "LEFT JOIN {target_schema}.warnings ON warnings.id = person_warning.warning_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_violent_warnings exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'",
                "warnings.warningtype = 'REM - Violence Warnings'",
                "warnings.warningtext = 'Casrec Migration - Violent Warning'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "p1_client_remarks_warnings": {
        "exclude": [],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "remarks",
            "transform": {},
            "joins": [
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.remarks.\"Case\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_p1_client_remarks_warnings exc_table ON exc_table.caserecnumber = remarks.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.remarks.\"Pri\" = '1'"
            ]
        },
        "sirius": {
            "from_table": "person_warning",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = person_warning.person_id",
                "LEFT JOIN {target_schema}.warnings ON warnings.id = person_warning.warning_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_p1_client_remarks_warnings exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'",
                "warnings.warningtype = 'Other'",
                "(warnings.warningtext NOT IN ('Casrec Migration - SAAR Check Warning', 'Casrec Migration - No Debt to be chased') OR warnings.warningtext IS NULL)"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "crec_persons": {
        "exclude": [
            "supervisioncaseowner_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "crec",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_crec_persons exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "persons",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_crec_persons exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "client_status": {
        "exclude": [
            "supervisioncaseowner_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "order",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_client_status exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "persons",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_crec_persons exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "deputy_daytime_phonenumbers": {
        "exclude": [
            "person_id",
            "updateddate"
        ],
        "casenumber_source": "cases.caserecnumber",
        "orderby": {
            "casesubtype": {
                "mapping_table": "cases.casesubtype",
                "direction": "ASC"
            },
            "orderdate": {
                "mapping_table": "cases.orderdate",
                "direction": "ASC"
            }
        },
        "casrec": {
            "from_table": "deputyship",
            "transform": {},
            "joins": [
                "LEFT JOIN {casrec_schema}.order ON {casrec_schema}.order.\"Order No\" = {casrec_schema}.deputyship.\"Order No\"",
                "LEFT JOIN {casrec_schema}.deputy ON {casrec_schema}.deputyship.\"Deputy No\" = {casrec_schema}.deputy.\"Deputy No\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_daytime_phonenumbers exc_table ON exc_table.caserecnumber = {casrec_schema}.order.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.deputy.\"Contact Telephone\" != ''",
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "order_deputy",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.cases ON cases.id = order_deputy.order_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = order_deputy.deputy_id",
                "LEFT JOIN {target_schema}.phonenumbers ON phonenumbers.person_id = persons.id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_daytime_phonenumbers exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_deputy'",
                "persons.clientsource = '{client_source}'",
                "phonenumbers.type = 'Work'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "deputy_evening_phonenumbers": {
        "exclude": [
            "person_id",
            "updateddate"
        ],
        "casenumber_source": "cases.caserecnumber",
        "orderby": {
            "casesubtype": {
                "mapping_table": "cases.casesubtype",
                "direction": "ASC"
            },
            "orderdate": {
                "mapping_table": "cases.orderdate",
                "direction": "ASC"
            }
        },
        "casrec": {
            "from_table": "deputyship",
            "transform": {},
            "joins": [
                "LEFT JOIN {casrec_schema}.order ON {casrec_schema}.order.\"Order No\" = {casrec_schema}.deputyship.\"Order No\"",
                "LEFT JOIN {casrec_schema}.deputy ON {casrec_schema}.deputyship.\"Deputy No\" = {casrec_schema}.deputy.\"Deputy No\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_evening_phonenumbers exc_table ON exc_table.caserecnumber = {casrec_schema}.order.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.deputy.\"Contact Tele2\" != ''",
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "order_deputy",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.cases ON cases.id = order_deputy.order_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = order_deputy.deputy_id",
                "LEFT JOIN {target_schema}.phonenumbers ON phonenumbers.person_id = persons.id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_evening_phonenumbers exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_deputy'",
                "persons.clientsource = '{client_source}'",
                "phonenumbers.type = 'Home'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "deputy_death_notifications": {
        "exclude": [
            "person_id"
        ],
        "casenumber_source": "cases.caserecnumber",
        "orderby": {
            "casesubtype": {
                "mapping_table": "cases.casesubtype",
                "direction": "ASC"
            },
            "orderdate": {
                "mapping_table": "cases.orderdate",
                "direction": "ASC"
            },
            "email": {
                "mapping_table": "deputy_persons.email",
                "direction": "ASC"
            }
        },
        "casrec": {
            "from_table": "deputy",
            "transform": {},
            "joins": [
                "LEFT JOIN {casrec_schema}.deputyship ON {casrec_schema}.deputyship.\"Deputy No\" = {casrec_schema}.deputy.\"Deputy No\"",
                "LEFT JOIN {casrec_schema}.order ON {casrec_schema}.order.\"Order No\" = {casrec_schema}.deputyship.\"Order No\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_death_notifications exc_table\n    ON exc_table.caserecnumber = deputyship.\"Case\"\n    AND exc_table.casesubtype = {casrec_schema}.order_type_lookup({casrec_schema}.order.\"Ord Type\")\n    AND exc_table.orderdate = {casrec_schema}.order.\"Made Date\"",
            "where_clauses": [
                "{casrec_schema}.deputy.\"Stat\" = '99'",
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "death_notifications",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = death_notifications.person_id",
                "LEFT JOIN {target_schema}.order_deputy ON order_deputy.deputy_id = death_notifications.person_id",
                "LEFT JOIN {target_schema}.cases ON cases.id = order_deputy.order_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_death_notifications exc_table ON exc_table.caserecnumber = cases.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_deputy'",
                "persons.clientsource = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "deputy_feepayer_id": {
        "exclude": [],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "persons",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "deputy_persons": {
        "exclude": [
            "caserecnumber",
            "dateofdeath",
            "uid",
            "deputycasrecid",
            "updateddate"
        ],
        "casenumber_source": "cases.caserecnumber",
        "orderby": {
            "casesubtype": {
                "mapping_table": "cases.casesubtype",
                "direction": "ASC"
            },
            "orderdate": {
                "mapping_table": "cases.orderdate",
                "direction": "ASC"
            }
        },
        "casrec": {
            "from_table": "deputyship",
            "transform": {
                "deputynumber": "CAST(NULLIF(TRIM({casrec_schema}.deputy.\"Deputy No\"), '') AS integer)",
                "organisationname": "ddpc.organisationname",
                "deputysubtype": "ddpc.deputysubtype",
                "surname": "ddpc.surname",
                "salutation": "ddpc.salutation",
                "firstname": "ddpc.firstname",
                "othernames": "ddpc.othernames"
            },
            "joins": [
                "LEFT JOIN {casrec_schema}.order ON {casrec_schema}.order.\"Order No\" = {casrec_schema}.deputyship.\"Order No\"",
                "LEFT JOIN {casrec_schema}.deputy ON {casrec_schema}.deputyship.\"Deputy No\" = {casrec_schema}.deputy.\"Deputy No\"",
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.order.\"Case\"",
                "LEFT JOIN {casrec_schema}.derive_deputy_persons_columns({casrec_schema}.deputyship.\"Order No\", {casrec_schema}.deputy.\"Deputy No\", {casrec_schema}.deputy.\"Dep Type\", {casrec_schema}.deputy.\"Title\", {casrec_schema}.deputy.\"Dep Forename\", {casrec_schema}.deputy.\"Dep Surname\") AS ddpc ON {casrec_schema}.deputyship.\"Deputy No\" = ddpc.deputynumber AND {casrec_schema}.deputyship.\"Order No\" = ddpc.ordernumber"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_persons exc_table\n    ON exc_table.caserecnumber = pat.\"Case\"\n    AND exc_table.casesubtype = {casrec_schema}.order_type_lookup({casrec_schema}.order.\"Ord Type\")\n    AND exc_table.orderdate = {casrec_schema}.order.\"Made Date\"",
            "where_clauses": [
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "order_deputy",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.cases ON cases.id = order_deputy.order_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = order_deputy.deputy_id",
                "LEFT JOIN {target_schema}.persons AS client ON client.id = cases.client_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_persons exc_table\n    ON exc_table.caserecnumber = client.caserecnumber\n    AND exc_table.casesubtype = cases.casesubtype\n    AND CAST(exc_table.orderdate AS DATE) = cases.orderdate",
            "where_clauses": [
                "persons.type = 'actor_deputy'",
                "persons.clientsource = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "caserecnumber",
          "identifiers": [
            "'12885347'",
            "'11854030'",
            "'11509969'",
            "'11065340'",
            "'99379589'",
            "'12138872'",
            "'11741056'",
            "'12742084'",
            "'13097967'",
            "'1208622T'",
            "'12913439'"
          ]
        }
    },
    "deputy_special_warnings": {
        "exclude": [],
        "casenumber_source": "cases.caserecnumber",
        "orderby": {
            "casesubtype": {
                "mapping_table": "cases.casesubtype",
                "direction": "ASC"
            },
            "orderdate": {
                "mapping_table": "cases.orderdate",
                "direction": "ASC"
            }
        },
        "casrec": {
            "from_table": "deputyship",
            "transform": {},
            "joins": [
                "LEFT JOIN {casrec_schema}.order ON {casrec_schema}.order.\"Order No\" = {casrec_schema}.deputyship.\"Order No\"",
                "LEFT JOIN {casrec_schema}.deputy ON {casrec_schema}.deputyship.\"Deputy No\" = {casrec_schema}.deputy.\"Deputy No\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_special_warnings exc_table ON exc_table.caserecnumber = {casrec_schema}.order.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.deputy.\"SIM\" = '3'",
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "order_deputy",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.cases ON cases.id = order_deputy.order_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = order_deputy.deputy_id",
                "LEFT JOIN {target_schema}.person_warning ON person_warning.person_id = order_deputy.deputy_id",
                "LEFT JOIN {target_schema}.warnings ON person_warning.warning_id = warnings.id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_special_warnings exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_deputy'",
                "persons.clientsource = '{client_source}'",
                "warnings.warningtype = 'REM - Special Interest Markers'",
                "warnings.warningtext = 'Casrec Migration - Special Interest Warning'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "deputy_violent_warnings": {
        "exclude": [],
        "casenumber_source": "cases.caserecnumber",
        "orderby": {
            "casesubtype": {
                "mapping_table": "cases.casesubtype",
                "direction": "ASC"
            },
            "orderdate": {
                "mapping_table": "cases.orderdate",
                "direction": "ASC"
            }
        },
        "casrec": {
            "from_table": "deputyship",
            "transform": {},
            "joins": [
                "LEFT JOIN {casrec_schema}.order ON {casrec_schema}.order.\"Order No\" = {casrec_schema}.deputyship.\"Order No\"",
                "LEFT JOIN {casrec_schema}.deputy ON {casrec_schema}.deputyship.\"Deputy No\" = {casrec_schema}.deputy.\"Deputy No\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_violent_warnings exc_table ON exc_table.caserecnumber = {casrec_schema}.order.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.deputy.\"VWM\" = '4'",
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "order_deputy",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.cases ON cases.id = order_deputy.order_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = order_deputy.deputy_id",
                "LEFT JOIN {target_schema}.person_warning ON person_warning.person_id = order_deputy.deputy_id",
                "LEFT JOIN {target_schema}.warnings ON person_warning.warning_id = warnings.id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_violent_warnings exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_deputy'",
                "persons.clientsource = '{client_source}'",
                "warnings.warningtype = 'REM - Violence Warnings'",
                "warnings.warningtext = 'Casrec Migration - Violent Warning'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "client_notes": {
        "exclude": [
            "upload_id",
            "document_id",
            "person_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "remarks",
            "transform": {
                "description": "CASE WHEN {col} = '' THEN 'no description migrated' ELSE TRIM({col}) END",
                "createdtime": "transf_convert_to_timestamp(\"Logdate\", \"Logtime\", NULL)::timestamp(0)"
            },
            "joins": [
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.remarks.\"Case\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_notes exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "supervision_notes as notes",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = notes.person_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_notes exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "deputy_notes": {
        "exclude": [
            "upload_id",
            "document_id",
            "person_id"
        ],
        "casenumber_source": "cases.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "deputy_remarks",
            "transform": {
                "createdtime": "transf_convert_to_timestamp(\"Log Date\", \"Log Time\", NULL)::timestamp(0)",
                "description": "NULLIF(TRIM(CASE WHEN {col} = '' THEN '-' ELSE {col} END), '')"
            },
            "joins": [
                "LEFT JOIN {casrec_schema}.deputyship ON {casrec_schema}.deputyship.\"Deputy No\" = {casrec_schema}.deputy_remarks.\"Deputy No\"",
                "LEFT JOIN {casrec_schema}.order ON {casrec_schema}.order.\"Order No\" = {casrec_schema}.deputyship.\"Order No\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_deputy_notes exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "supervision_notes as notes",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = notes.person_id",
                "LEFT JOIN {target_schema}.order_deputy ON order_deputy.deputy_id = notes.person_id",
                "LEFT JOIN {target_schema}.cases ON cases.id = order_deputy.order_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_notes exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_deputy'",
                "persons.clientsource = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "supervision_level_log": {
        "exclude": [
            "order_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "order",
            "transform": {},
            "joins": [
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.order.\"Case\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_supervision_level_log exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "supervision_level_log",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.cases ON cases.id = supervision_level_log.order_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = cases.client_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_supervision_level_log exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": []
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "tasks": {
        "exclude": [
            "completedby_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "SUP_ACTIVITY",
            "transform": {
                "duedate": "CAST(COALESCE(NULLIF(TRIM({casrec_schema}.sup_activity.\"Target\"), ''), NULLIF(TRIM({casrec_schema}.sup_activity.\"Start Date\"), '')) AS timestamp)"
            },
            "joins": [
                "INNER JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.sup_activity.\"Case\"",
                "INNER JOIN {casrec_schema}.order ON {casrec_schema}.order.\"Order No\" = {casrec_schema}.sup_activity.\"Order No\""
            ],
            "exception_table_join": "INNER JOIN {casrec_schema}.exceptions_tasks exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.sup_activity.\"Status\" IN ('ACTIVE')",
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "tasks",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.person_task pt ON pt.task_id = tasks.id",
                "LEFT JOIN {target_schema}.persons ON persons.id = pt.person_id",
                "LEFT JOIN {target_schema}.caseitem_task ON caseitem_task.task_id = tasks.id",
                "LEFT JOIN {target_schema}.cases ON cases.id = caseitem_task.caseitem_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_tasks exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "tasks.status = 'Not started'",
                "persons.type = 'actor_client'",
                "cases.client_id = persons.id"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "visits": {
        "exclude": [
            "client_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "REPVIS",
            "transform": {
                "visitsubtype": "{casrec_schema}.visits_visitsubtype({casrec_schema}.REPVIS.\"Req By\", {casrec_schema}.REPVIS.\"Report Type\")"
            },
            "joins": [
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.REPVIS.\"Case\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_visits exc_table ON exc_table.caserecnumber = REPVIS.\"Case\"",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "visits",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = visits.client_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_visits exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": []
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "annual_report_logs": {
        "exclude": [],
        "casenumber_source": "",
        "orderby": {},
        "casrec": {
            "from_table": "Account",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "annual_report_logs",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "annual_report_lodging_details": {
        "exclude": [
            "lodgedby_id"
        ],
        "casenumber_source": "",
        "orderby": {},
        "casrec": {
            "from_table": "account",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "annual_report_lodging_details",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "finance_invoice_ad": {
        "exclude": [
            "person_id",
            "finance_person_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "feeexport",
            "transform": {
                "finance_remission_exemption_id": "NULL::integer",
                "confirmeddate": "CASE WHEN NULLIF(sop_feecheck.\"GL Date\", 'NaT') IS NOT NULL THEN sop_feecheck.\"GL Date\"::date WHEN sop_aged_debt.\"Trx Number\" IS NOT NULL THEN NOW()::date ELSE NULL END"
            },
            "joins": [
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.feeexport.\"Case\"",
                "LEFT JOIN {casrec_schema}.sop_aged_debt ON {casrec_schema}.sop_aged_debt.\"Trx Number\" = {casrec_schema}.feeexport.\"Invoice No\"",
                "LEFT JOIN {casrec_schema}.sop_feecheck ON {casrec_schema}.sop_feecheck.\"Invoice Number\" = {casrec_schema}.feeexport.\"Invoice No\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_invoice_ad exc_table ON exc_table.caserecnumber = feeexport.\"Case\"",
            "where_clauses": [
                "LEFT(feeexport.\"Invoice No\", 2) = 'AD'",
                "CAST(feeexport.\"Amount\" AS DOUBLE PRECISION) > 0",
                "(NULLIF(feeexport.\"Create\", 'NaT')::timestamp(0) > '2019-03-31 23:59:59'::timestamp(0) OR CAST(sop_aged_debt.\"Outstanding Amount\" AS DOUBLE PRECISION) != 0)"
            ]
        },
        "sirius": {
            "from_table": "finance_invoice",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = finance_invoice.person_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_invoice_ad exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "finance_invoice.source = '{client_source}'",
                "finance_invoice.feetype = 'AD'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "finance_invoice_non_ad": {
        "exclude": [
            "person_id",
            "finance_person_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "feeexport",
            "transform": {
                "finance_remission_exemption_id": "NULL::integer",
                "confirmeddate": "CASE WHEN NULLIF(sop_feecheck.\"GL Date\", 'NaT') IS NOT NULL THEN sop_feecheck.\"GL Date\"::date WHEN sop_aged_debt.\"Trx Number\" IS NOT NULL THEN NOW()::date ELSE NULL END"
            },
            "joins": [
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.feeexport.\"Case\"",
                "LEFT JOIN {casrec_schema}.sop_aged_debt ON {casrec_schema}.sop_aged_debt.\"Trx Number\" = {casrec_schema}.feeexport.\"Invoice No\"",
                "LEFT JOIN {casrec_schema}.sop_feecheck ON {casrec_schema}.sop_feecheck.\"Invoice Number\" = {casrec_schema}.feeexport.\"Invoice No\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_invoice_non_ad exc_table ON exc_table.caserecnumber = feeexport.\"Case\"",
            "where_clauses": [
                "LEFT(feeexport.\"Invoice No\", 2) <> 'AD'",
                "CAST(feeexport.\"Amount\" AS DOUBLE PRECISION) > 0",
                "(NULLIF(feeexport.\"Create\", 'NaT')::timestamp(0) > '2019-03-31 23:59:59'::timestamp(0) OR CAST(sop_aged_debt.\"Outstanding Amount\" AS DOUBLE PRECISION) != 0)"
            ]
        },
        "sirius": {
            "from_table": "finance_invoice",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.persons ON persons.id = finance_invoice.person_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_invoice_non_ad exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "finance_invoice.source = '{client_source}'",
                "finance_invoice.feetype <> 'AD'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "finance_remissions": {
        "exclude": [
            "finance_person_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_remissions exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "pat.\"Remis\" <> '0'",
                "pat.\"Award Date\"::timestamp >= '2021-04-02'::timestamp"
            ]
        },
        "sirius": {
            "from_table": "finance_remission_exemption",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.finance_person ON finance_person.id = finance_remission_exemption.finance_person_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = finance_person.person_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_remissions exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "finance_remission_exemption.discounttype = 'REMISSION'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "finance_exemptions": {
        "exclude": [
            "finance_person_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_exemptions exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "pat.\"Exempt\" <> '0'",
                "pat.\"Award Date\"::timestamp >= '2021-04-02'::timestamp"
            ]
        },
        "sirius": {
            "from_table": "finance_remission_exemption",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.finance_person ON finance_person.id = finance_remission_exemption.finance_person_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = finance_person.person_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_exemptions exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "finance_remission_exemption.discounttype = 'EXEMPTION'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "finance_ledger_credits": {
        "exclude": [
            "finance_person_id",
            "reference"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "feeexport",
            "transform": {
                "finance_remission_exemption_id": "NULL::integer",
                "confirmeddate": "NULL::date"
            },
            "joins": [
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.feeexport.\"Case\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_ledger_credits exc_table ON exc_table.caserecnumber = feeexport.\"Case\"",
            "where_clauses": [
                "CAST(feeexport.\"Amount\" AS DOUBLE PRECISION) < 0",
                "EXISTS (SELECT 1 FROM {casrec_schema}.feeexport fe LEFT JOIN {casrec_schema}.sop_aged_debt sad ON sad.\"Trx Number\" = fe.\"Invoice No\" WHERE fe.\"Invoice No\" = {casrec_schema}.feeexport.\"Orig Invoice\" AND CAST(fe.\"Amount\" AS DOUBLE PRECISION) > 0 AND (NULLIF(fe.\"Create\", 'NaT')::timestamp(0) > '2019-03-31 23:59:59'::timestamp(0) OR CAST(sad.\"Outstanding Amount\" AS DOUBLE PRECISION) != 0))"
            ]
        },
        "sirius": {
            "from_table": "finance_ledger",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.finance_person ON finance_person.id = finance_ledger.finance_person_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = finance_person.person_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_ledger_credits exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "finance_ledger.source = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "finance_allocation_credits": {
        "exclude": [
            "ledger_entry_id",
            "invoice_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "feeexport",
            "transform": {
                "status": "CASE WHEN NULLIF(sop_feecheckcredits.\"GL Date\", 'NaT') IS NULL THEN 'PENDING' ELSE 'ALLOCATED' END",
                "allocateddate": "NULLIF(sop_feecheckcredits.\"GL Date\", 'NaT')::date"
            },
            "joins": [
                "LEFT JOIN {casrec_schema}.pat ON {casrec_schema}.pat.\"Case\" = {casrec_schema}.feeexport.\"Case\"",
                "LEFT JOIN {casrec_schema}.sop_feecheckcredits ON {casrec_schema}.sop_feecheckcredits.\"Invoice Number\" = {casrec_schema}.feeexport.\"Invoice No\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_allocation_credits exc_table ON exc_table.caserecnumber = feeexport.\"Case\"",
            "where_clauses": [
                "CAST(feeexport.\"Amount\" AS DOUBLE PRECISION) < 0",
                "EXISTS (SELECT 1 FROM {casrec_schema}.feeexport fe LEFT JOIN {casrec_schema}.sop_aged_debt sad ON sad.\"Trx Number\" = fe.\"Invoice No\" WHERE fe.\"Invoice No\" = {casrec_schema}.feeexport.\"Orig Invoice\" AND CAST(fe.\"Amount\" AS DOUBLE PRECISION) > 0 AND (NULLIF(fe.\"Create\", 'NaT')::timestamp(0) > '2019-03-31 23:59:59'::timestamp(0) OR CAST(sad.\"Outstanding Amount\" AS DOUBLE PRECISION) != 0))"
            ]
        },
        "sirius": {
            "from_table": "finance_ledger_allocation",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.finance_invoice ON finance_invoice.id = finance_ledger_allocation.invoice_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = finance_invoice.person_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_allocation_credits exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "finance_ledger_allocation.source = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "timeline_event": {
        "exclude": [],
        "casenumber_source": "",
        "orderby": {},
        "casrec": {
            "from_table": "Pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "timeline_event",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "person_timeline": {
        "exclude": [],
        "casenumber_source": "",
        "orderby": {},
        "casrec": {
            "from_table": "Pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "person_timeline",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "deputy_addresses": {
        "exclude": [],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "deputy_addresses",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "persons",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "finance_person_ids": {
        "exclude": [],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "persons",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "finance_order": {
        "exclude": [
            "order_id",
            "finance_person_id"
        ],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "order",
            "transform": {
                "billing_start_date": "ra.start_date"
            },
            "joins": [
                "LEFT JOIN (SELECT MIN(NULLIF(\"Start Date\", '')::date) AS start_date, \"Order No\" FROM {casrec_schema}.risk_assessment GROUP BY \"Order No\") ra ON ra.\"Order No\" = {casrec_schema}.order.\"Order No\"",
                "LEFT JOIN {casrec_schema}.pat ON pat.\"Case\" = {casrec_schema}.order.\"Case\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_order exc_table ON exc_table.caserecnumber = pat.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.order.\"Ord Type\" IN ('1','2','40','41')",
                "{casrec_schema}.order.\"Ord Stat\" <> 'Open'",
                "{casrec_schema}.order.\"Ord Risk Lvl\" <> ''"
            ]
        },
        "sirius": {
            "from_table": "finance_order",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.cases ON cases.id = finance_order.order_id",
                "LEFT JOIN {target_schema}.persons ON persons.id = cases.client_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_finance_order exc_table ON exc_table.caserecnumber = persons.caserecnumber",
            "where_clauses": [
                "persons.type = 'actor_client'",
                "persons.clientsource = '{client_source}'"
            ]
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "scheduled_events_reporting": {
        "exclude": [],
        "casenumber_source": "client_persons.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "pat",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "sirius": {
            "from_table": "persons",
            "transform": {},
            "joins": [],
            "exception_table_join": "",
            "where_clauses": []
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    },
    "order_deputy": {
        "exclude": [
            "order_id",
            "deputy_id",
            "statuschangedate"
        ],
        "casenumber_source": "cases.caserecnumber",
        "orderby": {},
        "casrec": {
            "from_table": "deputyship",
            "transform": {
                "statusoncase": "CASE WHEN {casrec_schema}.deputyship.\"Joint\" = '5' THEN 'CLOSED' ELSE NULLIF(TRIM({casrec_schema}.deputy_status_lookup({casrec_schema}.deputy.\"Stat\")), '') END",
                "statusoncaseoverride": "CASE WHEN {casrec_schema}.deputyship.\"Joint\" = '5' THEN 'DISCHARGED' ELSE NULLIF(TRIM({casrec_schema}.deputy_override_lookup({casrec_schema}.deputy.\"Stat\")), '') END"
            },
            "joins": [
                "LEFT JOIN {casrec_schema}.order ON {casrec_schema}.order.\"Order No\" = {casrec_schema}.deputyship.\"Order No\"",
                "LEFT JOIN {casrec_schema}.deputy ON {casrec_schema}.deputyship.\"Deputy No\" = {casrec_schema}.deputy.\"Deputy No\""
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_order_deputy exc_table ON exc_table.caserecnumber = {casrec_schema}.order.\"Case\"",
            "where_clauses": [
                "{casrec_schema}.order.\"Ord Stat\" != 'Open'"
            ]
        },
        "sirius": {
            "from_table": "order_deputy",
            "transform": {},
            "joins": [
                "LEFT JOIN {target_schema}.cases ON cases.id = order_deputy.order_id"
            ],
            "exception_table_join": "LEFT JOIN {casrec_schema}.exceptions_order_deputy exc_table ON exc_table.caserecnumber = cases.caserecnumber",
            "where_clauses": []
        },
        "manual_checks": {
          "column": "",
          "identifiers": []
        }
    }
}
